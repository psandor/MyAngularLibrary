{"version":3,"names":[],"mappings":"","sources":["components/my-notification.component.js"],"sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Component, trigger, state, style, transition, keyframes, animate, } from '@angular/core';\nvar MyNotificationComponent = (function () {\n    function MyNotificationComponent() {\n        var _this = this;\n        this.animationState = 'hidden';\n        var timeoutId = setTimeout(function () {\n            console.log(\"show notification\");\n            _this.show(\"hello\", \"world\");\n        }, 2000);\n    }\n    MyNotificationComponent.prototype.ngOnInit = function () { };\n    MyNotificationComponent.prototype.show = function (title, content) {\n        this.title = title;\n        this.content = content;\n        this.animationState = 'display';\n    };\n    return MyNotificationComponent;\n}());\nMyNotificationComponent = __decorate([\n    Component({\n        selector: 'my-notification',\n        template: \"\\n\\n      <div class=\\\"notification\\\" [@showNotification]=\\\"animationState\\\">\\n      <div>{{title}}</div>\\n      {{content}}\\n      </div>\\n    \",\n        styles: [\"\\n      .notification{position:fixed;right:20px;top:20px;background:#ec3761;padding:20px;font-family:Arial;color:#fff}.notification>div{font-size:20px;font-weight:700;margin-bottom:10px}\\n    \"],\n        animations: [\n            trigger('showNotification', [\n                state('hidden', style({ transform: 'translateY(-150%)' })),\n                state('display', style({ transform: 'translateX(150%)' })),\n                transition('* => *', [\n                    animate(3000, keyframes([\n                        style({ opacity: 0, transform: 'translateY(-150%)', offset: 0 }),\n                        style({ opacity: 0, transform: 'translateY(0%)', offset: .1 }),\n                        style({ opacity: 1, transform: 'translateY(0%)', offset: 0.9 }),\n                        style({ opacity: 1, transform: 'translateX(150%)', offset: 1 })\n                    ]))\n                ])\n            ])\n        ]\n    }),\n    __metadata(\"design:paramtypes\", [])\n], MyNotificationComponent);\nexport { MyNotificationComponent };\n"],"file":"my-notification.component.js"}